{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\testpc12\\\\projects\\\\SafePlate\\\\src\\\\games\\\\LabelReadingGame.js\",\n  _s = $RefreshSig$();\n// LabelReadingGame.js\nimport React, { useContext, useState } from 'react';\nimport { UserSettingsContext } from '../UserSettingsContext';\nimport './games.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LabelReadingGame({\n  next\n}) {\n  _s();\n  const {\n    allergen,\n    score,\n    setScore,\n    lives,\n    setLives\n  } = useContext(UserSettingsContext);\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const [done, setDone] = useState(false);\n\n  // For demonstration, a short label with hidden allergen references\n  const label = \"Peanut oil, sugar, wheat flour, salt\";\n  const words = label.split(', ');\n  const handleWordClick = word => {\n    if (!selectedWords.includes(word)) {\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n  const handleFinish = () => {\n    // Check if user found all relevant allergens\n    const foundAllergen = selectedWords.some(w => w.toLowerCase().includes(allergen));\n    if (foundAllergen) {\n      setFeedback(`Oops! This label contains your allergen.`);\n      setLives(lives - 1);\n      if (lives - 1 <= 0) {\n        next(0, true);\n      }\n    } else {\n      setScore(score + 30);\n      setFeedback(`Good job! You avoided ${allergen}!`);\n    }\n    setDone(true);\n  };\n  if (done) {\n    // Wait a moment or provide a button to continue\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"game-title\",\n        children: \"Label Reading Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => next(30, false),\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"game-title\",\n      children: \"Label Reading Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: [\"Tap words in the ingredient list that might indicate your allergen (\", allergen, \").\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        marginBottom: '20px'\n      },\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleWordClick(word),\n        style: {\n          padding: '10px',\n          border: selectedWords.includes(word) ? '2px solid #4fc1e9' : '1px solid #aaa',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          background: selectedWords.includes(word) ? '#4fc1e9' : '#fff',\n          color: selectedWords.includes(word) ? '#fff' : '#333'\n        },\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFinish,\n      className: \"start-game-button\",\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(LabelReadingGame, \"YyqRFevDH+Xf/sa/HpA2j7UD4lE=\");\n_c = LabelReadingGame;\nexport default LabelReadingGame;\nvar _c;\n$RefreshReg$(_c, \"LabelReadingGame\");","map":{"version":3,"names":["React","useContext","useState","UserSettingsContext","jsxDEV","_jsxDEV","LabelReadingGame","next","_s","allergen","score","setScore","lives","setLives","selectedWords","setSelectedWords","feedback","setFeedback","done","setDone","label","words","split","handleWordClick","word","includes","handleFinish","foundAllergen","some","w","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","gap","justifyContent","flexWrap","marginBottom","map","index","padding","border","borderRadius","cursor","background","color","_c","$RefreshReg$"],"sources":["C:/Users/testpc12/projects/SafePlate/src/games/LabelReadingGame.js"],"sourcesContent":["// LabelReadingGame.js\r\nimport React, { useContext, useState } from 'react';\r\nimport { UserSettingsContext } from '../UserSettingsContext';\r\nimport './games.css';\r\n\r\nfunction LabelReadingGame({ next }) {\r\n  const { allergen, score, setScore, lives, setLives } = useContext(UserSettingsContext);\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [done, setDone] = useState(false);\r\n\r\n  // For demonstration, a short label with hidden allergen references\r\n  const label = \"Peanut oil, sugar, wheat flour, salt\";\r\n  const words = label.split(', ');\r\n\r\n  const handleWordClick = (word) => {\r\n    if (!selectedWords.includes(word)) {\r\n      setSelectedWords([...selectedWords, word]);\r\n    }\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    // Check if user found all relevant allergens\r\n    const foundAllergen = selectedWords.some(w => w.toLowerCase().includes(allergen));\r\n    if (foundAllergen) {\r\n      setFeedback(`Oops! This label contains your allergen.`);\r\n      setLives(lives - 1);\r\n      if (lives - 1 <= 0) {\r\n        next(0, true);\r\n      }\r\n    } else {\r\n      setScore(score + 30);\r\n      setFeedback(`Good job! You avoided ${allergen}!`);\r\n    }\r\n    setDone(true);\r\n  };\r\n\r\n  if (done) {\r\n    // Wait a moment or provide a button to continue\r\n    return (\r\n      <div className=\"game-container\">\r\n        <h2 className=\"game-title\">Label Reading Results</h2>\r\n        <p>{feedback}</p>\r\n        <button onClick={() => next(30, false)}>Continue</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h2 className=\"game-title\">Label Reading Challenge</h2>\r\n      <p className=\"instructions\">\r\n        Tap words in the ingredient list that might indicate your allergen ({allergen}).\r\n      </p>\r\n      <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', flexWrap: 'wrap', marginBottom: '20px' }}>\r\n        {words.map((word, index) => (\r\n          <span\r\n            key={index}\r\n            onClick={() => handleWordClick(word)}\r\n            style={{\r\n              padding: '10px',\r\n              border: selectedWords.includes(word) ? '2px solid #4fc1e9' : '1px solid #aaa',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n              background: selectedWords.includes(word) ? '#4fc1e9' : '#fff',\r\n              color: selectedWords.includes(word) ? '#fff' : '#333'\r\n            }}\r\n          >\r\n            {word}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleFinish} className=\"start-game-button\">\r\n        Done\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabelReadingGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}