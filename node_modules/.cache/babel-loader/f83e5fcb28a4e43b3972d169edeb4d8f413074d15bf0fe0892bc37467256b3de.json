{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\testpc12\\\\projects\\\\SafePlate\\\\src\\\\games\\\\LabelReadingGame.js\",\n  _s = $RefreshSig$();\n// /src/games/LabelReadingGame.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LabelReadingGame() {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const ingredientList = \"Peanut oil, sugar, wheat flour, salt\";\n  const allergen = \"peanut\";\n  const words = ingredientList.split(', ');\n  const handleWordClick = word => {\n    if (!selectedWords.includes(word)) {\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"label-reading-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Label Reading Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click on words that indicate allergens.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredient-list\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleWordClick(word),\n        className: `ingredient-word ${selectedWords.includes(word) ? 'selected' : ''}`,\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), selectedWords.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You selected: \", selectedWords.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), selectedWords.some(word => word.toLowerCase().includes(allergen)) ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warning\",\n        children: \"Warning: This label contains allergens!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: \"Good job, no allergens detected!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(LabelReadingGame, \"eEDjz7dc3UBCEYRpSYFGbMTiebs=\");\n_c = LabelReadingGame;\nexport default LabelReadingGame;\nvar _c;\n$RefreshReg$(_c, \"LabelReadingGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LabelReadingGame","_s","selectedWords","setSelectedWords","ingredientList","allergen","words","split","handleWordClick","word","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","length","join","some","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/testpc12/projects/SafePlate/src/games/LabelReadingGame.js"],"sourcesContent":["// /src/games/LabelReadingGame.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction LabelReadingGame() {\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n  const ingredientList = \"Peanut oil, sugar, wheat flour, salt\";\r\n  const allergen = \"peanut\";\r\n\r\n  const words = ingredientList.split(', ');\r\n\r\n  const handleWordClick = (word) => {\r\n    if (!selectedWords.includes(word)) {\r\n      setSelectedWords([...selectedWords, word]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"label-reading-game\">\r\n      <h2>Label Reading Game</h2>\r\n      <p>Click on words that indicate allergens.</p>\r\n      <div className=\"ingredient-list\">\r\n        {words.map((word, index) => (\r\n          <span\r\n            key={index}\r\n            onClick={() => handleWordClick(word)}\r\n            className={`ingredient-word ${selectedWords.includes(word) ? 'selected' : ''}`}\r\n          >\r\n            {word}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      {selectedWords.length > 0 && (\r\n        <div className=\"result\">\r\n          <p>You selected: {selectedWords.join(', ')}</p>\r\n          {selectedWords.some(word => word.toLowerCase().includes(allergen)) ? (\r\n            <p className=\"warning\">Warning: This label contains allergens!</p>\r\n          ) : (\r\n            <p className=\"success\">Good job, no allergens detected!</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabelReadingGame;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMO,cAAc,GAAG,sCAAsC;EAC7D,MAAMC,QAAQ,GAAG,QAAQ;EAEzB,MAAMC,KAAK,GAAGF,cAAc,CAACG,KAAK,CAAC,IAAI,CAAC;EAExC,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAI,CAACP,aAAa,CAACQ,QAAQ,CAACD,IAAI,CAAC,EAAE;MACjCN,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEO,IAAI,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEV,OAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9CjB,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BN,KAAK,CAACW,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBACrBnB,OAAA;QAEEoB,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACC,IAAI,CAAE;QACrCE,SAAS,EAAE,mBAAmBT,aAAa,CAACQ,QAAQ,CAACD,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QAAAG,QAAA,EAE9EH;MAAI,GAJAS,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLd,aAAa,CAACkB,MAAM,GAAG,CAAC,iBACvBrB,OAAA;MAAKY,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBb,OAAA;QAAAa,QAAA,GAAG,gBAAc,EAACV,aAAa,CAACmB,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9Cd,aAAa,CAACoB,IAAI,CAACb,IAAI,IAAIA,IAAI,CAACc,WAAW,CAAC,CAAC,CAACb,QAAQ,CAACL,QAAQ,CAAC,CAAC,gBAChEN,OAAA;QAAGY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAElEjB,OAAA;QAAGY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC3D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAxCQD,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AA0CzB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}