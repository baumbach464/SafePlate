{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\testpc12\\\\projects\\\\SafePlate\\\\src\\\\games\\\\SortingPlateGame.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { UserSettingsContext } from '../UserSettingsContext';\nimport './SortingPlateGame.css';\n\n// Example allergen emojis\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allergenEmojis = {\n  milk: '🥛',\n  peanuts: '🥜',\n  eggs: '🥚',\n  wheat: '🌾',\n  fish: '🐟',\n  shellfish: '🦐',\n  soy: '🌱',\n  'tree nuts': '🌰'\n};\n\n// Sample food items with icons and allergens\nconst foodItems = [{\n  id: 1,\n  name: 'Milk Carton',\n  allergens: ['milk'],\n  emoji: '🥛'\n}, {\n  id: 2,\n  name: 'Peanut Butter',\n  allergens: ['peanuts'],\n  emoji: '🥜'\n}, {\n  id: 3,\n  name: 'Apple',\n  allergens: [],\n  emoji: '🍎'\n}, {\n  id: 4,\n  name: 'Bread',\n  allergens: ['wheat'],\n  emoji: '🍞'\n}, {\n  id: 5,\n  name: 'Egg Omelette',\n  allergens: ['eggs'],\n  emoji: '🍳'\n}, {\n  id: 6,\n  name: 'Carrot',\n  allergens: [],\n  emoji: '🥕'\n}, {\n  id: 7,\n  name: 'Fish Stick',\n  allergens: ['fish'],\n  emoji: '🐟'\n}, {\n  id: 8,\n  name: 'Yogurt',\n  allergens: ['milk'],\n  emoji: '🥛'\n}];\nfunction SortingPlateGame() {\n  _s();\n  // Retrieve allergen setting from global context\n  const {\n    allergen\n  } = useContext(UserSettingsContext) || {};\n  const [safePlate, setSafePlate] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // If user hasn't picked an allergen, default to \"peanuts\" for the example\n  const currentAllergen = allergen || 'peanuts';\n  const allergenSymbol = allergenEmojis[currentAllergen] || allergenEmojis['peanuts'];\n\n  // Add items to plate if they don't contain the allergen\n  const handleFoodClick = item => {\n    if (item.allergens.includes(currentAllergen)) {\n      setMessage(`Oops! ${item.emoji} ${item.name} contains ${allergenSymbol}. Please avoid it.`);\n    } else {\n      // Optionally limit the number of items on the plate\n      if (safePlate.length >= 12) {\n        setMessage('Your plate is full! Try removing an item or finishing the game.');\n        return;\n      }\n      setSafePlate([...safePlate, item]);\n      setMessage(`Great job! ${item.emoji} ${item.name} is safe 👍`);\n    }\n  };\n\n  // Remove an item from the plate (optional)\n  const removeItem = index => {\n    const updated = [...safePlate];\n    updated.splice(index, 1);\n    setSafePlate(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorting-plate-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"game-title\",\n      children: \"Sorting Plate Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: [\"Tap a food item to add it to your plate. Avoid foods with \", allergenSymbol, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-items-grid\",\n        children: foodItems.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFoodClick(item),\n          className: \"food-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"food-emoji\",\n            children: item.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"food-name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plate-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plate-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plate\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plate-grid\",\n              children: safePlate.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plate-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plate-item-emoji\",\n                  children: item.emoji\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plate-item-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"remove-button\",\n                  onClick: () => removeItem(index),\n                  children: \"\\u2716\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"plate-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(SortingPlateGame, \"OObXPh0A2Z5GVSeEi4iZFfq9v2M=\");\n_c = SortingPlateGame;\nexport default SortingPlateGame;\nvar _c;\n$RefreshReg$(_c, \"SortingPlateGame\");","map":{"version":3,"names":["React","useContext","useState","UserSettingsContext","jsxDEV","_jsxDEV","allergenEmojis","milk","peanuts","eggs","wheat","fish","shellfish","soy","foodItems","id","name","allergens","emoji","SortingPlateGame","_s","allergen","safePlate","setSafePlate","message","setMessage","currentAllergen","allergenSymbol","handleFoodClick","item","includes","length","removeItem","index","updated","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/testpc12/projects/SafePlate/src/games/SortingPlateGame.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { UserSettingsContext } from '../UserSettingsContext';\r\nimport './SortingPlateGame.css';\r\n\r\n// Example allergen emojis\r\nconst allergenEmojis = {\r\n  milk: '🥛',\r\n  peanuts: '🥜',\r\n  eggs: '🥚',\r\n  wheat: '🌾',\r\n  fish: '🐟',\r\n  shellfish: '🦐',\r\n  soy: '🌱',\r\n  'tree nuts': '🌰'\r\n};\r\n\r\n// Sample food items with icons and allergens\r\nconst foodItems = [\r\n  { id: 1, name: 'Milk Carton', allergens: ['milk'], emoji: '🥛' },\r\n  { id: 2, name: 'Peanut Butter', allergens: ['peanuts'], emoji: '🥜' },\r\n  { id: 3, name: 'Apple', allergens: [], emoji: '🍎' },\r\n  { id: 4, name: 'Bread', allergens: ['wheat'], emoji: '🍞' },\r\n  { id: 5, name: 'Egg Omelette', allergens: ['eggs'], emoji: '🍳' },\r\n  { id: 6, name: 'Carrot', allergens: [], emoji: '🥕' },\r\n  { id: 7, name: 'Fish Stick', allergens: ['fish'], emoji: '🐟' },\r\n  { id: 8, name: 'Yogurt', allergens: ['milk'], emoji: '🥛' }\r\n];\r\n\r\nfunction SortingPlateGame() {\r\n  // Retrieve allergen setting from global context\r\n  const { allergen } = useContext(UserSettingsContext) || {};\r\n  const [safePlate, setSafePlate] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  // If user hasn't picked an allergen, default to \"peanuts\" for the example\r\n  const currentAllergen = allergen || 'peanuts';\r\n  const allergenSymbol = allergenEmojis[currentAllergen] || allergenEmojis['peanuts'];\r\n\r\n  // Add items to plate if they don't contain the allergen\r\n  const handleFoodClick = (item) => {\r\n    if (item.allergens.includes(currentAllergen)) {\r\n      setMessage(`Oops! ${item.emoji} ${item.name} contains ${allergenSymbol}. Please avoid it.`);\r\n    } else {\r\n      // Optionally limit the number of items on the plate\r\n      if (safePlate.length >= 12) {\r\n        setMessage('Your plate is full! Try removing an item or finishing the game.');\r\n        return;\r\n      }\r\n      setSafePlate([...safePlate, item]);\r\n      setMessage(`Great job! ${item.emoji} ${item.name} is safe 👍`);\r\n    }\r\n  };\r\n\r\n  // Remove an item from the plate (optional)\r\n  const removeItem = (index) => {\r\n    const updated = [...safePlate];\r\n    updated.splice(index, 1);\r\n    setSafePlate(updated);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sorting-plate-container\">\r\n      <h2 className=\"game-title\">Sorting Plate Game</h2>\r\n      <p className=\"instructions\">\r\n        Tap a food item to add it to your plate. Avoid foods with {allergenSymbol}!\r\n      </p>\r\n\r\n      <div className=\"game-layout\">\r\n        {/* LEFT COLUMN (or top on mobile): Food items */}\r\n        <div className=\"food-items-grid\">\r\n          {foodItems.map((item) => (\r\n            <button\r\n              key={item.id}\r\n              onClick={() => handleFoodClick(item)}\r\n              className=\"food-button\"\r\n            >\r\n              <span className=\"food-emoji\">{item.emoji}</span>\r\n              <span className=\"food-name\">{item.name}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* RIGHT COLUMN (or bottom on mobile): Plate display */}\r\n        <div className=\"plate-area\">\r\n          <div className=\"plate-wrapper\">\r\n            {/* Actual circle with plate emoji in the background */}\r\n            <div className=\"plate\">\r\n              <div className=\"plate-grid\">\r\n                {safePlate.map((item, index) => (\r\n                  <div key={index} className=\"plate-item\">\r\n                    <span className=\"plate-item-emoji\">{item.emoji}</span>\r\n                    <span className=\"plate-item-name\">{item.name}</span>\r\n                    <button className=\"remove-button\" onClick={() => removeItem(index)}>\r\n                      ✖\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {message && <p className=\"plate-message\">{message}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortingPlateGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}